@using Blog.Data.Models.ViewModels.Review;

@model List<ReviewPreviewModel>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Home Page";
}

<style>
    /* Style for the "Read More" button */
    .read-more-button {
        background-color: #007BFF; /* Change the background color to blue */
        color: white; /* Change the text color to white */
        border: none; /* Remove the button border */
        padding: 5px 10px; /* Reduce the padding to make it smaller */
        border-radius: 5px; /* Add rounded corners */
        font-size: 17px; /* Reduce the font size */
        text-decoration: none; /* Remove underline from the button text */
        display: inline-block;
        transition: background-color 0.3s; /* Add a smooth transition effect */
    }

        /* Hover effect for the "Read More" button */
        .read-more-button:hover {
            background-color: #0056b3; /* Darker blue on hover */
        }

    /* Style for card images */
    .card-img {
        max-height: 200px; /* Set the maximum height for images */
        object-fit: cover; /* Maintain aspect ratio and cover the entire card */
    }

    /* Style for card title */
    .card-title {
        font-size: 1.25rem; /* Adjust the font size for the title */
        margin-bottom: 0.5rem; /* Add some margin at the bottom */
    }

    /* Style for card text */
    .card-text {
        font-size: 1rem; /* Adjust the font size for the text */
    }

    /* Style for card metadata container */
    .card-metadata-container {
        display: flex;
        margin-left: 10px;
        margin-right: 10px;
        justify-content: space-between;
        align-items: center;
    }

    /* Style for card metadata */
    .card-metadata {
        font-size: 0.875rem; /* Adjust the font size for metadata */
        color: grey; /* Set the text color for metadata */
    }


    .badge-primary-custom {
        background-color: #007bff;
        color: #fff;
    }

    .badge-success-custom {
        background-color: #28a745;
        color: #fff;
    }

    .badge-warning-custom {
        background-color: orangered;
        color: #fff;
    }

    .badge-danger-custom {
        background-color: mediumvioletred;
        color: #fff;
    }

</style>

<div class="container">
    <h1>Review Board</h1>

    <!-- Search Form -->
    <form method="get" asp-action="Index">
        <div class="input-group mb-3">
            <input type="text" class="form-control" name="search" placeholder="Search Reviews" value="@ViewBag.Search" />
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="submit">Search</button>
            </div>
        </div>
    </form>

    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var review in Model)
        {
            <div class="col">
                <div class="card h-100">
                    @if (!string.IsNullOrEmpty(review.ImageUrl))
                    {
                        <img src="@review.ImageUrl" class="card-img" alt="@review.Title">
                    }
                    <div class="card-body">
                            <p class="card-metadata">
                                @if (review.TopPick)
                                {
                                    <span class="badge badge-warning-custom">Top Pick</span>
                                }

                                @if (review.SpecialOffer)
                                {
                                    <span class="badge badge-danger-custom">Special Offer</span>
                                }
                            </p>
                        <h5 class="card-title">@review.Title</h5>
                        <p class="card-text">
                            @Html.Raw(review.Description.Length > 150 ? review.Description.Substring(0, 150) + "..." : review.Description)
                        </p>    
                    </div>
                    <div class="card-metadata-container">
                    <p class="card-metadata">
                        <strong>Tags:</strong>
                        @foreach (var tag in review.Tags)
                        {
                            <span class="badge badge-primary-custom">@tag</span>
                        }
                    </p>
                    </div>
                    <div class="card-metadata-container">
                        <p class="card-metadata">
                            <strong>Pricing:</strong>
                            @foreach (var strategy in review.PricingStrategies)
                            {
                                <span class="badge badge-success-custom">@strategy</span>
                            }
                        </p>
                    </div>
                    <div class="card-metadata-container">
                        <p class="card-metadata">@review.CreationDate</p>
                        <p class="card-metadata">
                            <strong><i class="fas fa-thumbs-up text-success"></i></strong> @review.UpVotes
                        </p>
                    </div>
                    <div class="card-footer">
                        @if (User.IsInRole("admin"))
                        {
                            <a asp-controller="Reviews" asp-action="Edit" asp-route-id="@review.Id" class="btn btn-warning">Edit</a>
                            <a asp-controller="Reviews" asp-action="Delete" asp-route-id="@review.Id" class="btn btn-danger">Delete</a>
                        }
                        <a asp-controller="Reviews" asp-action="Index" asp-route-Id="@review.Id" class="btn btn-primary read-more-button">Read</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>